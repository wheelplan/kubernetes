apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: es
  serviceName: "es"
  replicas: 3
  template:
    metadata:
      labels:
        app: es
    spec:
      terminationGracePeriodSeconds: 20
      containers:
      - name: es
        image: yuiya/edu:es-7.10.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9200
          name: rest
        - containerPort: 9300
          name: inter
        env:
        - name: cluster.name
          value: rocc
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: cluster.initial_master_nodes
          value: "es-0, es-1, es-2"
        - name: discovery.zen.minimum_master_nodes
          value: "2"
        - name: discovery.seed_hosts
          value: "es-0.es, es-1.es, es-2.es"
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        volumeMounts:
        - name: es-data
          mountPath: /usr/share/elasticsearch/data
        - name: config
          mountPath: /usr/share/elasticsearch//config/elasticsearch.yml
          subPath: elasticsearch.yml
          readOnly: true
        resources:
          requests:
            memory: "1000Mi"
          limits:
            memory: "2000Mi"
      volumes:
      - name: config
        configMap:
          name: es-config
  volumeClaimTemplates:
    - metadata:
        name: es-data
        annotations:
          volume.beta.kubernetes.io/storage-class: nfs-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: es
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: rest
      port: 9200
      targetPort: 9200
    - name: inter
      port: 9300
      targetPort: 9300 
  selector: 
    app: es

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: es
  namespace: kube-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
      - elasticsearch.rocc.top
    secretName: elasticsearch-tls
  rules:
  - host: elasticsearch.rocc.top
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: es
            port:
              number: 9200

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: es-config
  namespace: kube-system
data:
  elasticsearch.yml: |
    network.host: 0.0.0.0
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.keystore.type: PKCS12
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.keystore.path: elastic-certificates.p12
    xpack.security.transport.ssl.truststore.path: elastic-certificates.p12
    xpack.security.transport.ssl.truststore.type: PKCS12
    # xpack.security.http.ssl.enabled: true
    # xpack.security.http.ssl.keystore.path: elastic-certificates.p12
